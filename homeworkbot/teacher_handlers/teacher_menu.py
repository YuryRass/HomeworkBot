"""–ú–æ–¥—É–ª—å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–µ–ø–æ–¥–∞.

Raises:
        TeacherException: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–ø–æ–¥–∞.
"""
from enum import Enum, auto

from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, Message
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from database.main_db import teacher_crud
from database.main_db.admin_crud import is_admin

import homeworkbot.admin_handlers.admin_menu as admin_keyboard
from homeworkbot.admin_handlers.unban_student import \
    create_unban_student_buttons
from homeworkbot.teacher_handlers.utils import \
    create_teacher_groups_button, create_teacher_discipline_button


from homeworkbot.routers import teacher_menu_router
from homeworkbot.filters import IsOnlyTeacherCommands


class TeacherException(Exception):
    ...


class TeacherCommand(Enum):
    BAN_STUDENT = auto()
    UNBAN_STUDENT = auto()
    DOWNLOAD_FULL_REPORT = auto()
    DOWNLOAD_SHORT_REPORT = auto()
    DOWNLOAD_FINISH_REPORT = auto()
    DOWNLOAD_ANSWER = auto()
    INTERACTIVE_REPORT = auto()
    SWITCH_TO_ADMIN = auto()


__teacher_commands = {
    TeacherCommand.BAN_STUDENT: '–ó–∞–±–∞–Ω–∏—Ç—å',
    TeacherCommand.UNBAN_STUDENT: '–†–∞–∑–±–∞–Ω–∏—Ç—å',
    TeacherCommand.DOWNLOAD_ANSWER: '–°–∫–∞—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã',
    TeacherCommand.INTERACTIVE_REPORT: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç—á–µ—Ç',
    TeacherCommand.DOWNLOAD_FULL_REPORT: '–ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç',
    TeacherCommand.DOWNLOAD_SHORT_REPORT: '–ö–æ—Ä–æ—Ç–∫–∏–π –æ—Ç—á–µ—Ç',
    TeacherCommand.DOWNLOAD_FINISH_REPORT: '–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç',
    TeacherCommand.SWITCH_TO_ADMIN: 'ü•∑',
}


def create_teacher_keyboard(
    message: Message | None = None
) -> ReplyKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–µ–ø–æ–¥–∞.

    Args:
        message (Message | None, optional): Tg —Å–æ–æ–±—â–µ–Ω–∏–µ. Defaults to None.

    Returns:
        ReplyKeyboardMarkup: –ø—Ä–µ–ø–æ–¥—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """
    menu_kb: ReplyKeyboardBuilder = ReplyKeyboardBuilder()
    menu_kb.row(
        KeyboardButton(
            text=__teacher_commands[TeacherCommand.DOWNLOAD_ANSWER]
        ),
        KeyboardButton(
            text=__teacher_commands[TeacherCommand.DOWNLOAD_FINISH_REPORT]
        ),
        width=2
    )
    menu_kb.row(
        KeyboardButton(
            text=__teacher_commands[TeacherCommand.DOWNLOAD_FULL_REPORT]
        ),
        KeyboardButton(
            text=__teacher_commands[TeacherCommand.DOWNLOAD_SHORT_REPORT]
        ),
        width=2
    )
    menu_kb.row(
        KeyboardButton(
            text=__teacher_commands[TeacherCommand.INTERACTIVE_REPORT]
        ),
        width=1
    )

    footer_buttons = [
        KeyboardButton(text=__teacher_commands[TeacherCommand.BAN_STUDENT]),
        KeyboardButton(text=__teacher_commands[TeacherCommand.UNBAN_STUDENT]),
    ]

    if is_admin(message.from_user.id):
        footer_buttons.append(
            KeyboardButton(
                text=__teacher_commands[TeacherCommand.SWITCH_TO_ADMIN]
            )
        )
    menu_kb.row(*footer_buttons)
    return menu_kb.as_markup()


@teacher_menu_router.message(IsOnlyTeacherCommands(__teacher_commands))
async def handle_commands(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –ø—Ä–µ–ø–æ–¥–∞.

    Args:
        message (Message): Tg-—Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    await state.clear()  # —É–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è.

    command = get_current_teacher_command(message.text)

    match command:
        case TeacherCommand.SWITCH_TO_ADMIN:
            await switch_teacher_to_admin_menu(message)
        case TeacherCommand.DOWNLOAD_FULL_REPORT:
            await create_teacher_groups_button(message, 'fullReport')
        case TeacherCommand.DOWNLOAD_FINISH_REPORT:
            await create_teacher_groups_button(message, 'finishReport')
        case TeacherCommand.DOWNLOAD_SHORT_REPORT:
            await create_teacher_groups_button(message, 'shortReport')
        case TeacherCommand.BAN_STUDENT:
            await create_teacher_groups_button(message, 'groupBan')
        case TeacherCommand.UNBAN_STUDENT:
            await create_unban_student_buttons(message)
        case TeacherCommand.INTERACTIVE_REPORT:
            await create_teacher_groups_button(message, 'interactiveGrRep')
        case TeacherCommand.DOWNLOAD_ANSWER:
            await create_teacher_discipline_button(message, 'dowTAnswersDis')


async def switch_teacher_to_admin_menu(message: Message):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å –º–µ–Ω—é –ø—Ä–µ–ø–æ–¥–∞ –Ω–∞ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞.

    Args:
        message (Message): _description_
    """

    # –¥–µ–ª–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –ë–î
    teacher_crud.switch_teacher_mode_to_admin(message.from_user.id)

    await message.answer(
        text='–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞',
        parse_mode='HTML',
        disable_web_page_preview=True,
        reply_markup=admin_keyboard.first_admin_keyboard(message),
    )


def get_current_teacher_command(command: str) -> TeacherCommand:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.

    Args:
        command (str): —Å–∞–º–∞ –∫–æ–º–∞–Ω–¥–∞.

    Raises:
        TeacherException: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.

    """
    for key, value in __teacher_commands.items():
        if value == command:
            return key
    raise TeacherException('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')
